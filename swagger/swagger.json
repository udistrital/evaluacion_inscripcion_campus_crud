{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/cupos_por_dependencia/": {
            "get": {
                "tags": [
                    "cupos_por_dependencia"
                ],
                "description": "get CuposPorDependencia",
                "operationId": "CuposPorDependenciaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuposPorDependencia"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "cupos_por_dependencia"
                ],
                "description": "create CuposPorDependencia",
                "operationId": "CuposPorDependenciaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuposPorDependencia content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuposPorDependencia"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.CuposPorDependencia"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/cupos_por_dependencia/{id}": {
            "get": {
                "tags": [
                    "cupos_por_dependencia"
                ],
                "description": "get CuposPorDependencia by id",
                "operationId": "CuposPorDependenciaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuposPorDependencia"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "cupos_por_dependencia"
                ],
                "description": "update the CuposPorDependencia",
                "operationId": "CuposPorDependenciaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for CuposPorDependencia content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CuposPorDependencia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CuposPorDependencia"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cupos_por_dependencia"
                ],
                "description": "delete the CuposPorDependencia",
                "operationId": "CuposPorDependenciaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/detalle_evaluacion/": {
            "get": {
                "tags": [
                    "detalle_evaluacion"
                ],
                "description": "get DetalleEvaluacion",
                "operationId": "DetalleEvaluacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetalleEvaluacion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "detalle_evaluacion"
                ],
                "description": "create DetalleEvaluacion",
                "operationId": "DetalleEvaluacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetalleEvaluacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DetalleEvaluacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DetalleEvaluacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/detalle_evaluacion/{id}": {
            "get": {
                "tags": [
                    "detalle_evaluacion"
                ],
                "description": "get DetalleEvaluacion by id",
                "operationId": "DetalleEvaluacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetalleEvaluacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "detalle_evaluacion"
                ],
                "description": "update the DetalleEvaluacion",
                "operationId": "DetalleEvaluacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetalleEvaluacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DetalleEvaluacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetalleEvaluacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "detalle_evaluacion"
                ],
                "description": "delete the DetalleEvaluacion",
                "operationId": "DetalleEvaluacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/entrevista/": {
            "get": {
                "tags": [
                    "entrevista"
                ],
                "description": "get Entrevista",
                "operationId": "EntrevistaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "entrevista"
                ],
                "description": "create Entrevista",
                "operationId": "EntrevistaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Entrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Entrevista"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Entrevista"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/entrevista/{id}": {
            "get": {
                "tags": [
                    "entrevista"
                ],
                "description": "get Entrevista by id",
                "operationId": "EntrevistaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "entrevista"
                ],
                "description": "update the Entrevista",
                "operationId": "EntrevistaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Entrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Entrevista"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevista"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "entrevista"
                ],
                "description": "delete the Entrevista",
                "operationId": "EntrevistaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/entrevistador/": {
            "get": {
                "tags": [
                    "entrevistador"
                ],
                "description": "get Entrevistador",
                "operationId": "EntrevistadorController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevistador"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "entrevistador"
                ],
                "description": "create Entrevistador",
                "operationId": "EntrevistadorController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Entrevistador content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Entrevistador"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Entrevistador"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/entrevistador/{id}": {
            "get": {
                "tags": [
                    "entrevistador"
                ],
                "description": "get Entrevistador by id",
                "operationId": "EntrevistadorController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevistador"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "entrevistador"
                ],
                "description": "update the Entrevistador",
                "operationId": "EntrevistadorController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Entrevistador content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Entrevistador"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Entrevistador"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "entrevistador"
                ],
                "description": "delete the Entrevistador",
                "operationId": "EntrevistadorController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/entrevistador_entrevista/": {
            "get": {
                "tags": [
                    "entrevistador_entrevista"
                ],
                "description": "get EntrevistadorEntrevista",
                "operationId": "EntrevistadorEntrevistaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EntrevistadorEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "entrevistador_entrevista"
                ],
                "description": "create EntrevistadorEntrevista",
                "operationId": "EntrevistadorEntrevistaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EntrevistadorEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EntrevistadorEntrevista"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EntrevistadorEntrevista"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/entrevistador_entrevista/{id}": {
            "get": {
                "tags": [
                    "entrevistador_entrevista"
                ],
                "description": "get EntrevistadorEntrevista by id",
                "operationId": "EntrevistadorEntrevistaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EntrevistadorEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "entrevistador_entrevista"
                ],
                "description": "update the EntrevistadorEntrevista",
                "operationId": "EntrevistadorEntrevistaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EntrevistadorEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EntrevistadorEntrevista"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EntrevistadorEntrevista"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "entrevistador_entrevista"
                ],
                "description": "delete the EntrevistadorEntrevista",
                "operationId": "EntrevistadorEntrevistaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_entrevista/": {
            "get": {
                "tags": [
                    "estado_entrevista"
                ],
                "description": "get EstadoEntrevista",
                "operationId": "EstadoEntrevistaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_entrevista"
                ],
                "description": "create EstadoEntrevista",
                "operationId": "EstadoEntrevistaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoEntrevista"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoEntrevista"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_entrevista/{id}": {
            "get": {
                "tags": [
                    "estado_entrevista"
                ],
                "description": "get EstadoEntrevista by id",
                "operationId": "EstadoEntrevistaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_entrevista"
                ],
                "description": "update the EstadoEntrevista",
                "operationId": "EstadoEntrevistaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoEntrevista"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoEntrevista"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_entrevista"
                ],
                "description": "delete the EstadoEntrevista",
                "operationId": "EstadoEntrevistaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/evaluacion_inscripcion/": {
            "get": {
                "tags": [
                    "evaluacion_inscripcion"
                ],
                "description": "get EvaluacionInscripcion",
                "operationId": "EvaluacionInscripcionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EvaluacionInscripcion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "evaluacion_inscripcion"
                ],
                "description": "create EvaluacionInscripcion",
                "operationId": "EvaluacionInscripcionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EvaluacionInscripcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EvaluacionInscripcion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EvaluacionInscripcion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/evaluacion_inscripcion/{id}": {
            "get": {
                "tags": [
                    "evaluacion_inscripcion"
                ],
                "description": "get EvaluacionInscripcion by id",
                "operationId": "EvaluacionInscripcionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EvaluacionInscripcion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "evaluacion_inscripcion"
                ],
                "description": "update the EvaluacionInscripcion",
                "operationId": "EvaluacionInscripcionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EvaluacionInscripcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EvaluacionInscripcion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EvaluacionInscripcion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "evaluacion_inscripcion"
                ],
                "description": "delete the EvaluacionInscripcion",
                "operationId": "EvaluacionInscripcionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/requisito/": {
            "get": {
                "tags": [
                    "requisito"
                ],
                "description": "get Requisito",
                "operationId": "RequisitoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Requisito"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "requisito"
                ],
                "description": "create Requisito",
                "operationId": "RequisitoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Requisito content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Requisito"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Requisito"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/requisito/{id}": {
            "get": {
                "tags": [
                    "requisito"
                ],
                "description": "get Requisito by id",
                "operationId": "RequisitoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Requisito"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "requisito"
                ],
                "description": "update the Requisito",
                "operationId": "RequisitoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Requisito content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Requisito"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Requisito"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "requisito"
                ],
                "description": "delete the Requisito",
                "operationId": "RequisitoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/requisito_programa_academico/": {
            "get": {
                "tags": [
                    "requisito_programa_academico"
                ],
                "description": "get RequisitoProgramaAcademico",
                "operationId": "RequisitoProgramaAcademicoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoProgramaAcademico"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "requisito_programa_academico"
                ],
                "description": "create RequisitoProgramaAcademico",
                "operationId": "RequisitoProgramaAcademicoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RequisitoProgramaAcademico content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoProgramaAcademico"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RequisitoProgramaAcademico"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/requisito_programa_academico/{id}": {
            "get": {
                "tags": [
                    "requisito_programa_academico"
                ],
                "description": "get RequisitoProgramaAcademico by id",
                "operationId": "RequisitoProgramaAcademicoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoProgramaAcademico"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "requisito_programa_academico"
                ],
                "description": "update the RequisitoProgramaAcademico",
                "operationId": "RequisitoProgramaAcademicoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RequisitoProgramaAcademico content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoProgramaAcademico"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RequisitoProgramaAcademico"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "requisito_programa_academico"
                ],
                "description": "delete the RequisitoProgramaAcademico",
                "operationId": "RequisitoProgramaAcademicoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_entrevista/": {
            "get": {
                "tags": [
                    "tipo_entrevista"
                ],
                "description": "get TipoEntrevista",
                "operationId": "TipoEntrevistaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_entrevista"
                ],
                "description": "create TipoEntrevista",
                "operationId": "TipoEntrevistaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntrevista"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoEntrevista"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_entrevista/{id}": {
            "get": {
                "tags": [
                    "tipo_entrevista"
                ],
                "description": "get TipoEntrevista by id",
                "operationId": "TipoEntrevistaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntrevista"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_entrevista"
                ],
                "description": "update the TipoEntrevista",
                "operationId": "TipoEntrevistaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoEntrevista content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntrevista"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoEntrevista"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_entrevista"
                ],
                "description": "delete the TipoEntrevista",
                "operationId": "TipoEntrevistaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CuposPorDependencia": {
            "title": "CuposPorDependencia",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CuposEspeciales": {
                    "type": "string"
                },
                "CuposHabilitados": {
                    "type": "integer",
                    "format": "int64"
                },
                "CuposOpcionados": {
                    "type": "integer",
                    "format": "int64"
                },
                "DependenciaId": {
                    "type": "integer",
                    "format": "int64"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PeriodoId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.DetalleEvaluacion": {
            "title": "DetalleEvaluacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "DetalleCalificacion": {
                    "type": "string"
                },
                "EntrevistaId": {
                    "$ref": "#/definitions/models.Entrevista"
                },
                "EvaluacionInscripcionId": {
                    "$ref": "#/definitions/models.EvaluacionInscripcion"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NotaRequisito": {
                    "type": "number",
                    "format": "double"
                },
                "RequisitoProgramaAcademicoId": {
                    "$ref": "#/definitions/models.RequisitoProgramaAcademico"
                }
            }
        },
        "models.Entrevista": {
            "title": "Entrevista",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "EstadoEntrevistaId": {
                    "$ref": "#/definitions/models.EstadoEntrevista"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaEntrevista": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InscripcionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoEntrevistaId": {
                    "$ref": "#/definitions/models.TipoEntrevista"
                }
            }
        },
        "models.Entrevistador": {
            "title": "Entrevistador",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PersonaId": {
                    "type": "integer",
                    "format": "int64"
                },
                "ProgramaAcademicoId": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EntrevistadorEntrevista": {
            "title": "EntrevistadorEntrevista",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "EntrevistaId": {
                    "$ref": "#/definitions/models.Entrevista"
                },
                "EntrevistadorId": {
                    "$ref": "#/definitions/models.Entrevistador"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NotaParcial": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoEntrevista": {
            "title": "EstadoEntrevista",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EvaluacionInscripcion": {
            "title": "EvaluacionInscripcion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InscripcionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "NotaFinal": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Requisito": {
            "title": "Requisito",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Formato": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.RequisitoProgramaAcademico": {
            "title": "RequisitoProgramaAcademico",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PeriodoId": {
                    "type": "integer",
                    "format": "int64"
                },
                "PorcentajeEspecifico": {
                    "type": "string"
                },
                "PorcentajeGeneral": {
                    "type": "number",
                    "format": "double"
                },
                "ProgramaAcademicoId": {
                    "type": "integer",
                    "format": "int64"
                },
                "RequisitoId": {
                    "$ref": "#/definitions/models.Requisito"
                }
            }
        },
        "models.TipoEntrevista": {
            "title": "TipoEntrevista",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        }
    },
    "tags": [
        {
            "name": "estado_entrevista",
            "description": "EstadoEntrevistaController operations for EstadoEntrevista\n"
        },
        {
            "name": "requisito",
            "description": "RequisitoController operations for Requisito\n"
        },
        {
            "name": "tipo_entrevista",
            "description": "TipoEntrevistaController operations for TipoEntrevista\n"
        },
        {
            "name": "evaluacion_inscripcion",
            "description": "EvaluacionInscripcionController operations for EvaluacionInscripcion\n"
        },
        {
            "name": "entrevistador_entrevista",
            "description": "EntrevistadorEntrevistaController operations for EntrevistadorEntrevista\n"
        },
        {
            "name": "entrevistador",
            "description": "EntrevistadorController operations for Entrevistador\n"
        },
        {
            "name": "requisito_programa_academico",
            "description": "RequisitoProgramaAcademicoController operations for RequisitoProgramaAcademico\n"
        },
        {
            "name": "cupos_por_dependencia",
            "description": "CuposPorDependenciaController operations for CuposPorDependencia\n"
        },
        {
            "name": "entrevista",
            "description": "EntrevistaController operations for Entrevista\n"
        },
        {
            "name": "tr_archivo_icfes",
            "description": "operations for TrArchivoIcfesController\n"
        },
        {
            "name": "detalle_evaluacion",
            "description": "DetalleEvaluacionController operations for DetalleEvaluacion\n"
        }
    ]
}